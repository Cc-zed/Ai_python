# Імпортуємо необхідні бібліотеки
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import numpy as np

# Читання даних з файлу
df = pd.read_csv('usd_uah.csv', parse_dates=['Date'], dayfirst=True)

# Перевіримо наявність даних і структуру
print(df.head())

# Переконаємось, що колонка 'Date' має правильний формат
df['Date'] = pd.to_datetime(df['Date'], format='%d-%m-%Y')

# Візуалізація даних для кращого розуміння
plt.figure(figsize=(10,6))
plt.plot(df['Date'], df['Rate'], label='Курс USD/UAH')
plt.xlabel('Дата')
plt.ylabel('Курс')
plt.title('Динаміка курсу USD до UAH')
plt.grid(True)
plt.show()

# Підготовка даних для навчання
# Використовуємо лише дату і курс як наші змінні
df['Days'] = (df['Date'] - df['Date'].min()).dt.days

# Розділяємо дані на X (дні) і y (курс)
X = df[['Days']]  # Незалежна змінна (дні)
y = df['Rate']    # Залежна змінна (курс)

# Розподіляємо на тренувальні та тестові дані
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Створення та тренування моделі
model = LinearRegression()
model.fit(X_train, y_train)

# Прогнозування на тестових даних
y_pred = model.predict(X_test)

# Оцінка моделі
from sklearn.metrics import mean_absolute_error
mae = mean_absolute_error(y_test, y_pred)
print(f'Середня абсолютна похибка: {mae}')

# Прогноз на 10 днів вперед
future_days = np.arange(df['Days'].max(), df['Days'].max() + 10).reshape(-1, 1)
future_predictions = model.predict(future_days)

# Створення графіку
plt.figure(figsize=(10,6))
plt.plot(df['Date'], df['Rate'], label='Історичні дані')
future_dates = pd.date_range(df['Date'].max(), periods=11, freq='D')[1:]
plt.plot(future_dates, future_predictions, label='Прогноз на 10 днів вперед', color='red', linestyle='--')
plt.xlabel('Дата')
plt.ylabel('Курс')
plt.title('Прогноз курсу USD до UAH на 10 днів вперед')
plt.legend()
plt.grid(True)
plt.show()
